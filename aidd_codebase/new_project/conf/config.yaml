# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - db: mnist.yaml
  - model: mnist.yaml
  - callbacks: default.yaml
  - logger: null              # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - trainer: default.yaml
  - paths: default.yaml
  - extras: default.yaml
  - hydra: default.yaml

  - experiment: null          # experiment configs allow for version control of specific hyperparameters
  - hparams_search: null      # config for hyperparameter optimization
  - debug: null               # debugging config (enable through command line, e.g. `python train.py debug=default)

  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default.yaml    # optional local config for machine/user specific settings

# Information
name: project_name
version: 0.0.1
description: "Project description"
author: "Author Name"
tags: ["dev"]

# Training
task_name: "train"    # task name, determines output directory path
batch_size: 128       # batch size
train: True           # set False to skip model training
test: True            # evaluate on test set, using best model weights achieved during training
seed: 1234            # seed for random number generators in pytorch, numpy and python.random
ckpt_path: null       # simply provide checkpoint path to resume training

# Data
db: 
  seed: ${seed}
  batch_size: ${batch_size}
  drop_last: ${multi_gpu}

# Model
model: 
  seed: ${seed}
  batch_size: ${batch_size}